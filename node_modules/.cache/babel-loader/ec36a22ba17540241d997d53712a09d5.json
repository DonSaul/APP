{"ast":null,"code":"import _regeneratorRuntime from\"/Users/saulo/Desktop/apph/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/saulo/Desktop/apph/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/saulo/Desktop/apph/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/saulo/Desktop/apph/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/saulo/Desktop/apph/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/saulo/Desktop/apph/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{Alert,Button,Collapse,Container,Form,Spinner,ListGroup,Tabs,Tab}from'react-bootstrap';import{FaCamera,FaChevronDown,FaChevronRight}from'react-icons/fa';import{openDB}from'idb';import Cropper from'react-cropper';import*as tf from'@tensorflow/tfjs';import LoadButton from'../components/LoadButton';import{MODEL_CLASSES}from'../model/classes';import config from'../config';import'./Classify.css';import'cropperjs/dist/cropper.css';var MODEL_PATH='/model/model.json';var IMAGE_SIZE=224;var CANVAS_SIZE=224;var TOPK_PREDICTIONS=5;var INDEXEDDB_DB='tensorflowjs';var INDEXEDDB_STORE='model_info_store';var INDEXEDDB_KEY='web-model';/**\n * Class to handle the rendering of the Classify page.\n * @extends React.Component\n */var Classify=/*#__PURE__*/function(_Component){_inherits(Classify,_Component);var _super=_createSuper(Classify);function Classify(props){var _this;_classCallCheck(this,Classify);_this=_super.call(this,props);_this.initWebcam=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return tf.data.webcam(_this.refs.webcam,{resizeWidth:CANVAS_SIZE,resizeHeight:CANVAS_SIZE,facingMode:'environment'});case 3:_this.webcam=_context.sent;_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);_this.refs.noWebcam.style.display='block';case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));_this.startWebcam=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(_this.webcam){_this.webcam.start();}case 1:case\"end\":return _context2.stop();}}},_callee2);}));_this.stopWebcam=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(_this.webcam){_this.webcam.stop();}case 1:case\"end\":return _context3.stop();}}},_callee3);}));_this.getModelInfo=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(\"\".concat(config.API_ENDPOINT,\"/model_info\"),{method:'GET'}).then(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(response){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return response.json().then(function(data){_this.modelLastUpdated=data.last_updated;}).catch(function(err){console.log('Unable to get parse model info.');});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x){return _ref5.apply(this,arguments);};}()).catch(function(err){console.log('Unable to get model info');});case 2:case\"end\":return _context5.stop();}}},_callee5);}));_this.updateModel=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:// Get the latest model from the server and refresh the one saved in IndexedDB.\nconsole.log('Updating the model: '+INDEXEDDB_KEY);_this.setState({isDownloadingModel:true});_context6.next=4;return tf.loadLayersModel(MODEL_PATH);case 4:_this.model=_context6.sent;_context6.next=7;return _this.model.save('indexeddb://'+INDEXEDDB_KEY);case 7:_this.setState({isDownloadingModel:false,modelUpdateAvailable:false,showModelUpdateAlert:false,showModelUpdateSuccess:true});case 8:case\"end\":return _context6.stop();}}},_callee6);}));_this.classifyLocalImage=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var croppedCanvas,image,imageData,resizedImage,logits,probabilities,preds,context,ratioX,ratioY,ratio;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_this.setState({isClassifying:true});croppedCanvas=_this.refs.cropper.getCroppedCanvas();image=tf.tidy(function(){return tf.browser.fromPixels(croppedCanvas).toFloat();});// Process and resize image before passing in to model.\n_context7.next=5;return _this.processImage(image);case 5:imageData=_context7.sent;resizedImage=tf.image.resizeBilinear(imageData,[IMAGE_SIZE,IMAGE_SIZE]);logits=_this.model.predict(resizedImage);_context7.next=10;return logits.data();case 10:probabilities=_context7.sent;_context7.next=13;return _this.getTopKClasses(probabilities,TOPK_PREDICTIONS);case 13:preds=_context7.sent;_this.setState({predictions:preds,isClassifying:false,photoSettingsOpen:!_this.state.photoSettingsOpen});// Draw thumbnail to UI.\ncontext=_this.refs.canvas.getContext('2d');ratioX=CANVAS_SIZE/croppedCanvas.width;ratioY=CANVAS_SIZE/croppedCanvas.height;ratio=Math.min(ratioX,ratioY);context.clearRect(0,0,CANVAS_SIZE,CANVAS_SIZE);context.drawImage(croppedCanvas,0,0,croppedCanvas.width*ratio,croppedCanvas.height*ratio);// Dispose of tensors we are finished with.\nimage.dispose();imageData.dispose();resizedImage.dispose();logits.dispose();case 25:case\"end\":return _context7.stop();}}},_callee7);}));_this.classifyWebcamImage=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var imageCapture,resized,imageData,logits,probabilities,preds,tensorData;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_this.setState({isClassifying:true});_context8.next=3;return _this.webcam.capture();case 3:imageCapture=_context8.sent;resized=tf.image.resizeBilinear(imageCapture,[IMAGE_SIZE,IMAGE_SIZE]);_context8.next=7;return _this.processImage(resized);case 7:imageData=_context8.sent;logits=_this.model.predict(imageData);_context8.next=11;return logits.data();case 11:probabilities=_context8.sent;_context8.next=14;return _this.getTopKClasses(probabilities,TOPK_PREDICTIONS);case 14:preds=_context8.sent;_this.setState({predictions:preds,isClassifying:false,photoSettingsOpen:!_this.state.photoSettingsOpen});// Draw thumbnail to UI.\ntensorData=tf.tidy(function(){return imageCapture.toFloat().div(255);});_context8.next=19;return tf.browser.toPixels(tensorData,_this.refs.canvas);case 19:// Dispose of tensors we are finished with.\nresized.dispose();imageCapture.dispose();imageData.dispose();logits.dispose();tensorData.dispose();case 24:case\"end\":return _context8.stop();}}},_callee8);}));_this.processImage=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(image){return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:return _context9.abrupt(\"return\",tf.tidy(function(){return image.expandDims(0).toFloat().div(127).sub(1);}));case 1:case\"end\":return _context9.stop();}}},_callee9);}));return function(_x2){return _ref9.apply(this,arguments);};}();_this.getTopKClasses=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(values,topK){var valuesAndIndices,i,topkValues,topkIndices,_i,topClassesAndProbs,_i2;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:valuesAndIndices=[];for(i=0;i<values.length;i++){valuesAndIndices.push({value:values[i],index:i});}valuesAndIndices.sort(function(a,b){return b.value-a.value;});topkValues=new Float32Array(topK);topkIndices=new Int32Array(topK);for(_i=0;_i<topK;_i++){topkValues[_i]=valuesAndIndices[_i].value;topkIndices[_i]=valuesAndIndices[_i].index;}topClassesAndProbs=[];for(_i2=0;_i2<topkIndices.length;_i2++){topClassesAndProbs.push({className:MODEL_CLASSES[topkIndices[_i2]],probability:(topkValues[_i2]*100).toFixed(2)});}return _context10.abrupt(\"return\",topClassesAndProbs);case 9:case\"end\":return _context10.stop();}}},_callee10);}));return function(_x3,_x4){return _ref10.apply(this,arguments);};}();_this.handlePanelClick=function(event){_this.setState({photoSettingsOpen:!_this.state.photoSettingsOpen});};_this.handleFileChange=function(event){if(event.target.files&&event.target.files.length>0){_this.setState({file:URL.createObjectURL(event.target.files[0]),filename:event.target.files[0].name});}};_this.handleTabSelect=function(activeKey){switch(activeKey){case'camera':_this.startWebcam();break;case'localfile':_this.setState({filename:null,file:null});_this.stopWebcam();break;default:}};_this.webcam=null;_this.model=null;_this.modelLastUpdated=null;_this.state={modelLoaded:false,filename:'',isModelLoading:false,isClassifying:false,predictions:[],photoSettingsOpen:true,modelUpdateAvailable:false,showModelUpdateAlert:false,showModelUpdateSuccess:false,isDownloadingModel:false};return _this;}_createClass(Classify,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(){var _this2=this;var db,item,dateSaved,prediction;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:if(!('indexedDB'in window)){_context11.next=36;break;}_context11.prev=1;_context11.next=4;return tf.loadLayersModel('indexeddb://'+INDEXEDDB_KEY);case 4:this.model=_context11.sent;_context11.prev=5;_context11.next=8;return openDB(INDEXEDDB_DB,1);case 8:db=_context11.sent;_context11.next=11;return db.transaction(INDEXEDDB_STORE).objectStore(INDEXEDDB_STORE).get(INDEXEDDB_KEY);case 11:item=_context11.sent;dateSaved=new Date(item.modelArtifactsInfo.dateSaved);_context11.next=15;return this.getModelInfo();case 15:console.log(this.modelLastUpdated);if(!this.modelLastUpdated||dateSaved>=new Date(this.modelLastUpdated).getTime()){console.log('Using saved model');}else{this.setState({modelUpdateAvailable:true,showModelUpdateAlert:true});}_context11.next=23;break;case 19:_context11.prev=19;_context11.t0=_context11[\"catch\"](5);console.warn(_context11.t0);console.warn('Could not retrieve when model was saved.');case 23:_context11.next=34;break;case 25:_context11.prev=25;_context11.t1=_context11[\"catch\"](1);console.log('Not found in IndexedDB. Loading and saving...');console.log(_context11.t1);_context11.next=31;return tf.loadLayersModel(MODEL_PATH);case 31:this.model=_context11.sent;_context11.next=34;return this.model.save('indexeddb://'+INDEXEDDB_KEY);case 34:_context11.next=40;break;case 36:console.warn('IndexedDB not supported.');_context11.next=39;return tf.loadLayersModel(MODEL_PATH);case 39:this.model=_context11.sent;case 40:this.setState({modelLoaded:true});this.initWebcam();// Warm up model.\nprediction=tf.tidy(function(){return _this2.model.predict(tf.zeros([1,IMAGE_SIZE,IMAGE_SIZE,3]));});prediction.dispose();case 44:case\"end\":return _context11.stop();}}},_callee11,this,[[1,25],[5,19]]);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"componentWillUnmount\",value:function(){var _componentWillUnmount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(){return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:if(this.webcam){this.webcam.stop();}// Attempt to dispose of the model.\ntry{this.model.dispose();}catch(e){// Assume model is not loaded or already disposed.\n}case 2:case\"end\":return _context12.stop();}}},_callee12,this);}));function componentWillUnmount(){return _componentWillUnmount.apply(this,arguments);}return componentWillUnmount;}()},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"Classify container\"},!this.state.modelLoaded&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",role:\"status\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Cargando...\")),' ',/*#__PURE__*/React.createElement(\"span\",{className:\"loading-model-text\"},\"Cargando Modelo\")),this.state.modelLoaded&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:this.handlePanelClick,className:\"classify-panel-header\",\"aria-controls\":\"photo-selection-pane\",\"aria-expanded\":this.state.photoSettingsOpen},\"Toma o selecciona una foto para clasificar\",/*#__PURE__*/React.createElement(\"span\",{className:\"panel-arrow\"},this.state.photoSettingsOpen?/*#__PURE__*/React.createElement(FaChevronDown,null):/*#__PURE__*/React.createElement(FaChevronRight,null))),/*#__PURE__*/React.createElement(Collapse,{in:this.state.photoSettingsOpen},/*#__PURE__*/React.createElement(\"div\",{id:\"photo-selection-pane\"},this.state.modelUpdateAvailable&&this.state.showModelUpdateAlert&&/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Alert,{variant:\"info\",show:this.state.modelUpdateAvailable&&this.state.showModelUpdateAlert,onClose:function onClose(){return _this3.setState({showModelUpdateAlert:false});},dismissible:true},\"An update for the \",/*#__PURE__*/React.createElement(\"strong\",null,this.state.modelType),\" El modelo esta disponible.\",/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-center pt-1\"},!this.state.isDownloadingModel&&/*#__PURE__*/React.createElement(Button,{onClick:this.updateModel,variant:\"outline-info\"},\"Update\"),this.state.isDownloadingModel&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",role:\"status\",size:\"sm\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Descargando...\")),' ',/*#__PURE__*/React.createElement(\"strong\",null,\"Descargando...\"))))),this.state.showModelUpdateSuccess&&/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Alert,{variant:\"success\",onClose:function onClose(){return _this3.setState({showModelUpdateSuccess:false});},dismissible:true},\"The \",/*#__PURE__*/React.createElement(\"strong\",null,this.state.modelType),\" El modelo se ha actualizado!\")),/*#__PURE__*/React.createElement(Tabs,{defaultActiveKey:\"camera\",id:\"input-options\",onSelect:this.handleTabSelect,className:\"justify-content-center\"},/*#__PURE__*/React.createElement(Tab,{eventKey:\"camera\",title:\"Tomar Foto\"},/*#__PURE__*/React.createElement(\"div\",{id:\"no-webcam\",ref:\"noWebcam\"},/*#__PURE__*/React.createElement(\"span\",{className:\"camera-icon\"},/*#__PURE__*/React.createElement(FaCamera,null)),\"No se detect\\xF3 una camara. \",/*#__PURE__*/React.createElement(\"br\",null),\"Por favor use un dispositivo o cargue una imagen.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"webcam-box-outer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"webcam-box-inner\"},/*#__PURE__*/React.createElement(\"video\",{ref:\"webcam\",autoPlay:true,playsInline:true,muted:true,id:\"webcam\",width:\"448\",height:\"448\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"button-container\"},/*#__PURE__*/React.createElement(LoadButton,{variant:\"custom\",size:\"lg\",onClick:this.classifyWebcamImage,isLoading:this.state.isClassifying,text:\"Clasifcar\",loadingText:\"Clasificando...\"}))),/*#__PURE__*/React.createElement(Tab,{eventKey:\"localfile\",title:\"Selecccionar del dispositivo\"},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"file\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Seleccionar un archivo\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Label,{className:\"imagelabel\"},this.state.filename?this.state.filename:'Buscar...'),/*#__PURE__*/React.createElement(Form.Control,{onChange:this.handleFileChange,type:\"file\",accept:\"image/*\",className:\"imagefile\"})),this.state.file&&/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{id:\"local-image\"},/*#__PURE__*/React.createElement(Cropper,{ref:\"cropper\",src:this.state.file,style:{height:400,width:'100%'},guides:true,aspectRatio:1/1,viewMode:2})),/*#__PURE__*/React.createElement(\"div\",{className:\"button-container\"},/*#__PURE__*/React.createElement(LoadButton,{variant:\"primary\",size:\"lg\",disabled:!this.state.filename,onClick:this.classifyLocalImage,isLoading:this.state.isClassifying,text:\"Clasificar\",loadingText:\"Clasificando...\"}))))))),this.state.predictions.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"classification-results\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Predicciones\"),/*#__PURE__*/React.createElement(\"canvas\",{ref:\"canvas\",width:CANVAS_SIZE,height:CANVAS_SIZE}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(ListGroup,null,this.state.predictions.map(function(category){return/*#__PURE__*/React.createElement(ListGroup.Item,{key:category.className},/*#__PURE__*/React.createElement(\"strong\",null,category.className),\" \",category.probability,\"%\");})))));}}]);return Classify;}(Component);export{Classify as default};","map":{"version":3,"sources":["/Users/saulo/Desktop/apph/src/pages/Classify.js"],"names":["React","Component","Fragment","Alert","Button","Collapse","Container","Form","Spinner","ListGroup","Tabs","Tab","FaCamera","FaChevronDown","FaChevronRight","openDB","Cropper","tf","LoadButton","MODEL_CLASSES","config","MODEL_PATH","IMAGE_SIZE","CANVAS_SIZE","TOPK_PREDICTIONS","INDEXEDDB_DB","INDEXEDDB_STORE","INDEXEDDB_KEY","Classify","props","initWebcam","data","webcam","refs","resizeWidth","resizeHeight","facingMode","noWebcam","style","display","startWebcam","start","stopWebcam","stop","getModelInfo","fetch","API_ENDPOINT","method","then","response","json","modelLastUpdated","last_updated","catch","err","console","log","updateModel","setState","isDownloadingModel","loadLayersModel","model","save","modelUpdateAvailable","showModelUpdateAlert","showModelUpdateSuccess","classifyLocalImage","isClassifying","croppedCanvas","cropper","getCroppedCanvas","image","tidy","browser","fromPixels","toFloat","processImage","imageData","resizedImage","resizeBilinear","logits","predict","probabilities","getTopKClasses","preds","predictions","photoSettingsOpen","state","context","canvas","getContext","ratioX","width","ratioY","height","ratio","Math","min","clearRect","drawImage","dispose","classifyWebcamImage","capture","imageCapture","resized","tensorData","div","toPixels","expandDims","sub","values","topK","valuesAndIndices","i","length","push","value","index","sort","a","b","topkValues","Float32Array","topkIndices","Int32Array","topClassesAndProbs","className","probability","toFixed","handlePanelClick","event","handleFileChange","target","files","file","URL","createObjectURL","filename","name","handleTabSelect","activeKey","modelLoaded","isModelLoading","window","db","transaction","objectStore","get","item","dateSaved","Date","modelArtifactsInfo","getTime","warn","prediction","zeros","e","modelType","map","category"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {\n  Alert, Button, Collapse, Container, Form, Spinner, ListGroup, Tabs, Tab\n} from 'react-bootstrap';\nimport { FaCamera, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport { openDB } from 'idb';\nimport Cropper  from 'react-cropper';\nimport * as tf from '@tensorflow/tfjs';\nimport LoadButton from '../components/LoadButton';\nimport { MODEL_CLASSES } from '../model/classes';\nimport config from '../config';\nimport './Classify.css';\nimport 'cropperjs/dist/cropper.css';\n\n\nconst MODEL_PATH = '/model/model.json';\nconst IMAGE_SIZE = 224;\nconst CANVAS_SIZE = 224;\nconst TOPK_PREDICTIONS = 5;\n\nconst INDEXEDDB_DB = 'tensorflowjs';\nconst INDEXEDDB_STORE = 'model_info_store';\nconst INDEXEDDB_KEY = 'web-model';\n\n/**\n * Class to handle the rendering of the Classify page.\n * @extends React.Component\n */\nexport default class Classify extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.webcam = null;\n    this.model = null;\n    this.modelLastUpdated = null;\n\n    this.state = {\n      modelLoaded: false,\n      filename: '',\n      isModelLoading: false,\n      isClassifying: false,\n      predictions: [],\n      photoSettingsOpen: true,\n      modelUpdateAvailable: false,\n      showModelUpdateAlert: false,\n      showModelUpdateSuccess: false,\n      isDownloadingModel: false\n    };\n  }\n\n  async componentDidMount() {\n    if (('indexedDB' in window)) {\n      try {\n        this.model = await tf.loadLayersModel('indexeddb://' + INDEXEDDB_KEY);\n\n        // Safe to assume tensorflowjs database and related object store exists.\n        // Get the date when the model was saved.\n        try {\n          const db = await openDB(INDEXEDDB_DB, 1, );\n          const item = await db.transaction(INDEXEDDB_STORE)\n                               .objectStore(INDEXEDDB_STORE)\n                               .get(INDEXEDDB_KEY);\n          const dateSaved = new Date(item.modelArtifactsInfo.dateSaved);\n          await this.getModelInfo();\n          console.log(this.modelLastUpdated);\n          if (!this.modelLastUpdated  || dateSaved >= new Date(this.modelLastUpdated).getTime()) {\n            console.log('Using saved model');\n          }\n          else {\n            this.setState({\n              modelUpdateAvailable: true,\n              showModelUpdateAlert: true,\n            });\n          }\n\n        }\n        catch (error) {\n          console.warn(error);\n          console.warn('Could not retrieve when model was saved.');\n        }\n\n      }\n      // If error here, assume that the object store doesn't exist and the model currently isn't\n      // saved in IndexedDB.\n      catch (error) {\n        console.log('Not found in IndexedDB. Loading and saving...');\n        console.log(error);\n        this.model = await tf.loadLayersModel(MODEL_PATH);\n        await this.model.save('indexeddb://' + INDEXEDDB_KEY);\n      }\n    }\n    // If no IndexedDB, then just download like normal.\n    else {\n      console.warn('IndexedDB not supported.');\n      this.model = await tf.loadLayersModel(MODEL_PATH);\n    }\n\n    this.setState({ modelLoaded: true });\n    this.initWebcam();\n\n    // Warm up model.\n    let prediction = tf.tidy(() => this.model.predict(tf.zeros([1, IMAGE_SIZE, IMAGE_SIZE, 3])));\n    prediction.dispose();\n  }\n\n  async componentWillUnmount() {\n    if (this.webcam) {\n      this.webcam.stop();\n    }\n\n    // Attempt to dispose of the model.\n    try {\n      this.model.dispose();\n    }\n    catch (e) {\n      // Assume model is not loaded or already disposed.\n    }\n  }\n\n  initWebcam = async () => {\n    try {\n      this.webcam = await tf.data.webcam(\n        this.refs.webcam,\n        {resizeWidth: CANVAS_SIZE, resizeHeight: CANVAS_SIZE, facingMode: 'environment'}\n      );\n    }\n    catch (e) {\n      this.refs.noWebcam.style.display = 'block';\n    }\n  }\n\n  startWebcam = async () => {\n    if (this.webcam) {\n      this.webcam.start();\n    }\n  }\n\n  stopWebcam = async () => {\n    if (this.webcam) {\n      this.webcam.stop();\n    }\n  }\n\n  getModelInfo = async () => {\n    await fetch(`${config.API_ENDPOINT}/model_info`, {\n      method: 'GET',\n    })\n    .then(async (response) => {\n      await response.json().then((data) => {\n        this.modelLastUpdated = data.last_updated;\n      })\n      .catch((err) => {\n        console.log('Unable to get parse model info.');\n      });\n    })\n    .catch((err) => {\n      console.log('Unable to get model info');\n    });\n  }\n\n  updateModel = async () => {\n    // Get the latest model from the server and refresh the one saved in IndexedDB.\n    console.log('Updating the model: ' + INDEXEDDB_KEY);\n    this.setState({ isDownloadingModel: true });\n    this.model = await tf.loadLayersModel(MODEL_PATH);\n    await this.model.save('indexeddb://' + INDEXEDDB_KEY);\n    this.setState({\n      isDownloadingModel: false,\n      modelUpdateAvailable: false,\n      showModelUpdateAlert: false,\n      showModelUpdateSuccess: true\n    });\n  }\n\n  classifyLocalImage = async () => {\n    this.setState({ isClassifying: true });\n\n    const croppedCanvas = this.refs.cropper.getCroppedCanvas();\n    const image = tf.tidy( () => tf.browser.fromPixels(croppedCanvas).toFloat());\n\n    // Process and resize image before passing in to model.\n    const imageData = await this.processImage(image);\n    const resizedImage = tf.image.resizeBilinear(imageData, [IMAGE_SIZE, IMAGE_SIZE]);\n\n    const logits = this.model.predict(resizedImage);\n    const probabilities = await logits.data();\n    const preds = await this.getTopKClasses(probabilities, TOPK_PREDICTIONS);\n\n    this.setState({\n      predictions: preds,\n      isClassifying: false,\n      photoSettingsOpen: !this.state.photoSettingsOpen\n    });\n\n    // Draw thumbnail to UI.\n    const context = this.refs.canvas.getContext('2d');\n    const ratioX = CANVAS_SIZE / croppedCanvas.width;\n    const ratioY = CANVAS_SIZE / croppedCanvas.height;\n    const ratio = Math.min(ratioX, ratioY);\n    context.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\n    context.drawImage(croppedCanvas, 0, 0,\n                      croppedCanvas.width * ratio, croppedCanvas.height * ratio);\n\n    // Dispose of tensors we are finished with.\n    image.dispose();\n    imageData.dispose();\n    resizedImage.dispose();\n    logits.dispose();\n  }\n\n  classifyWebcamImage = async () => {\n    this.setState({ isClassifying: true });\n\n    const imageCapture = await this.webcam.capture();\n\n    const resized = tf.image.resizeBilinear(imageCapture, [IMAGE_SIZE, IMAGE_SIZE]);\n    const imageData = await this.processImage(resized);\n    const logits = this.model.predict(imageData);\n    const probabilities = await logits.data();\n    const preds = await this.getTopKClasses(probabilities, TOPK_PREDICTIONS);\n\n    this.setState({\n      predictions: preds,\n      isClassifying: false,\n      photoSettingsOpen: !this.state.photoSettingsOpen\n    });\n\n    // Draw thumbnail to UI.\n    const tensorData = tf.tidy(() => imageCapture.toFloat().div(255));\n    await tf.browser.toPixels(tensorData, this.refs.canvas);\n\n    // Dispose of tensors we are finished with.\n    resized.dispose();\n    imageCapture.dispose();\n    imageData.dispose();\n    logits.dispose();\n    tensorData.dispose();\n  }\n\n  processImage = async (image) => {\n    return tf.tidy(() => image.expandDims(0).toFloat().div(127).sub(1));\n  }\n\n  /**\n   * Computes the probabilities of the topK classes given logits by computing\n   * softmax to get probabilities and then sorting the probabilities.\n   * @param logits Tensor representing the logits from MobileNet.\n   * @param topK The number of top predictions to show.\n   */\n  getTopKClasses = async (values, topK) => {\n    const valuesAndIndices = [];\n    for (let i = 0; i < values.length; i++) {\n      valuesAndIndices.push({value: values[i], index: i});\n    }\n    valuesAndIndices.sort((a, b) => {\n      return b.value - a.value;\n    });\n    const topkValues = new Float32Array(topK);\n    const topkIndices = new Int32Array(topK);\n    for (let i = 0; i < topK; i++) {\n      topkValues[i] = valuesAndIndices[i].value;\n      topkIndices[i] = valuesAndIndices[i].index;\n    }\n\n    const topClassesAndProbs = [];\n    for (let i = 0; i < topkIndices.length; i++) {\n      topClassesAndProbs.push({\n        className: MODEL_CLASSES[topkIndices[i]],\n        probability: (topkValues[i] * 100).toFixed(2)\n      });\n    }\n    return topClassesAndProbs;\n  }\n\n  handlePanelClick = event => {\n    this.setState({ photoSettingsOpen: !this.state.photoSettingsOpen });\n  }\n\n  handleFileChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      this.setState({\n        file: URL.createObjectURL(event.target.files[0]),\n        filename: event.target.files[0].name\n      });\n    }\n  }\n\n  handleTabSelect = activeKey => {\n    switch(activeKey) {\n      case 'camera':\n        this.startWebcam();\n        break;\n      case 'localfile':\n        this.setState({filename: null, file: null});\n        this.stopWebcam();\n        break;\n      default:\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Classify container\">\n\n      { !this.state.modelLoaded &&\n        <Fragment>\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Cargando...</span>\n          </Spinner>\n          {' '}<span className=\"loading-model-text\">Cargando Modelo</span>\n        </Fragment>\n      }\n\n      { this.state.modelLoaded &&\n        <Fragment>\n        <Button\n          variant='primary'\n          onClick={this.handlePanelClick}\n          className=\"classify-panel-header\"\n          aria-controls=\"photo-selection-pane\"\n          aria-expanded={this.state.photoSettingsOpen}\n          >\n          Toma o selecciona una foto para clasificar\n            <span className='panel-arrow'>\n            { this.state.photoSettingsOpen\n              ? <FaChevronDown />\n              : <FaChevronRight />\n            }\n            </span>\n          </Button>\n          <Collapse in={this.state.photoSettingsOpen}>\n            <div id=\"photo-selection-pane\">\n            { this.state.modelUpdateAvailable && this.state.showModelUpdateAlert &&\n                <Container>\n                  <Alert\n                    variant=\"info\"\n                    show={this.state.modelUpdateAvailable && this.state.showModelUpdateAlert}\n                    onClose={() => this.setState({ showModelUpdateAlert: false})}\n                    dismissible>\n                      An update for the <strong>{this.state.modelType}</strong> El modelo esta disponible.\n                      <div className=\"d-flex justify-content-center pt-1\">\n                        {!this.state.isDownloadingModel &&\n                          <Button onClick={this.updateModel}\n                                  variant=\"outline-info\">\n                            Update\n                          </Button>\n                        }\n                        {this.state.isDownloadingModel &&\n                          <div>\n                            <Spinner animation=\"border\" role=\"status\" size=\"sm\">\n                              <span className=\"sr-only\">Descargando...</span>\n                            </Spinner>\n                            {' '}<strong>Descargando...</strong>\n                          </div>\n                        }\n                      </div>\n                  </Alert>\n                </Container>\n              }\n              {this.state.showModelUpdateSuccess &&\n                <Container>\n                  <Alert variant=\"success\"\n                         onClose={() => this.setState({ showModelUpdateSuccess: false})}\n                         dismissible>\n                    The <strong>{this.state.modelType}</strong> El modelo se ha actualizado!\n                  </Alert>\n                </Container>\n              }\n            <Tabs defaultActiveKey=\"camera\" id=\"input-options\" onSelect={this.handleTabSelect}\n                  className=\"justify-content-center\">\n              <Tab eventKey=\"camera\" title=\"Tomar Foto\">\n                <div id=\"no-webcam\" ref=\"noWebcam\">\n                  <span className=\"camera-icon\"><FaCamera /></span>\n                  No se detectó una camara. <br />\n                  Por favor use un dispositivo o cargue una imagen.\n                </div>\n                <div className=\"webcam-box-outer\">\n                  <div className=\"webcam-box-inner\">\n                    <video ref=\"webcam\" autoPlay playsInline muted id=\"webcam\"\n                           width=\"448\" height=\"448\">\n                    </video>\n                  </div>\n                </div>\n                <div className=\"button-container\">\n                  <LoadButton\n                    variant=\"custom\"\n\n                    size=\"lg\"\n                    onClick={this.classifyWebcamImage}\n                    isLoading={this.state.isClassifying}\n                    text=\"Clasifcar\"\n                    loadingText=\"Clasificando...\"\n                  />\n                </div>\n              </Tab>\n              <Tab eventKey=\"localfile\" title=\"Selecccionar del dispositivo\">\n                <Form.Group controlId=\"file\">\n                  <Form.Label>Seleccionar un archivo</Form.Label><br />\n                  <Form.Label className=\"imagelabel\">\n                    {this.state.filename ? this.state.filename : 'Buscar...'}\n                  </Form.Label>\n                  <Form.Control\n                    onChange={this.handleFileChange}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    className=\"imagefile\" />\n                </Form.Group>\n                { this.state.file &&\n                  <Fragment>\n                    <div id=\"local-image\">\n                      <Cropper\n                        ref=\"cropper\"\n                        src={this.state.file}\n                        style={{height: 400, width: '100%'}}\n                        guides={true}\n                        aspectRatio={1 / 1}\n                        viewMode={2}\n                      />\n                    </div>\n                    <div className=\"button-container\">\n                      <LoadButton\n                        variant=\"primary\"\n                        size=\"lg\"\n                        disabled={!this.state.filename}\n                        onClick={this.classifyLocalImage}\n                        isLoading={this.state.isClassifying}\n                        text=\"Clasificar\"\n                        loadingText=\"Clasificando...\"\n                      />\n                    </div>\n                  </Fragment>\n                }\n              </Tab>\n            </Tabs>\n            </div>\n          </Collapse>\n          { this.state.predictions.length > 0 &&\n            <div className=\"classification-results\">\n              <h3>Predicciones</h3>\n              <canvas ref=\"canvas\" width={CANVAS_SIZE} height={CANVAS_SIZE} />\n              <br />\n              <ListGroup>\n              {this.state.predictions.map((category) => {\n                  return (\n                    <ListGroup.Item key={category.className}>\n                      <strong>{category.className}</strong> {category.probability}%</ListGroup.Item>\n                  );\n              })}\n              </ListGroup>\n            </div>\n          }\n          </Fragment>\n        }\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}